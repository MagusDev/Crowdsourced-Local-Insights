openapi: 3.0.3
servers:
- url: /api
components:
  schemas:
      User:
        properties:
          username:
            description: unique username
            type: string
          email:
            description: email address
            type: string
          phone:
            description: phone number
            type: number
          password:
            description: password
            type: string
          first_name:
            description: first name
            type: string
          last_name:
            description: last name
            type: string
          status:
            description: user status
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - BANNED
          role:
            description: user role
            type: string
            enum:
              - ADMIN
              - USER
          profile_picture:
            description: profile picture
            type: string
        required:
          - username
          - email
          - password
          - first_name

      Insight:
        properties:
          title:
            description: title of the insight
            type: string
          description:
            description: description of the insight
            type: string
          longitude:
            description: longitude of the insight
            type: number
          latitude:
            description: latitude of the insight
            type: number
          image:
            description: image of the insight
            type: string
          address:
            description: address of the insight
            type: string
          category:
            description: category of the insight
            type: string
          subcategory:
            description: subcategory of the insight
            type: string
          external_link:
            description: external link of the insight
            type: string
        required:
          - title
          - longitude
          - latitude

      Feedback:
        properties:
          rating:
            description: rating of the feedback
            type: number
          comment:
            description: comment of the feedback
            type: string
  parameters:
    user:
      name: user
      in: path
      description: Name or email of the user
      required: true
      schema:
        type: string
    insight:
        name: insight
        in: path
        description: ID of the insight
        required: true
        schema:
            type: string
    feedback:
        name: feedback
        in: path
        description: ID of the feedback
        required: true
        schema:
            type: string
  securitySchemes:
    localInsightsApiKey:
      type: apiKey
      name: Geodata-Api-Key
      in: header
paths:
  /users/:
    get:
      tags:
        - users
      description: Get all users
      responses:
        '200':
          description: Get list of users
          content:
            application/json:
              example:
                - id: 1
                  full_name: John Doe
                  username: johndoe
                  email: user1@gmail.com
                  status: ACTIVE
                - id: 2
                  full_name: John Anderson
                  username: johnaderson
                  email: user2@gmail.com
                  status: INACTIVE

        '500':
          description: Internal server error
    post:
      tags:
        - users
      description: Create a new user
      requestBody:
        description: JSON data contain user required fields
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              username: johndoe
              email: user1@gmail.com
              password: abc123
              first_name: John
              last_name: Doe

      responses:
        '201':
          description: User created successfully
          headers:
            Location:
              description: URI of newly created user
              schema:
                type: string
        '415':
          description: Request content type must be JSON
        '400':
          description: Incomplete request
        '409':
          description: User name or email already exists
  /users/{user}:
    parameters:
      - $ref: '#/components/parameters/user'
    get:
      tags:
        - users
      description: Get user by username or email
      responses:
          '200':
            description: Get single user info successfully
            content:
              application/json:
                examples:
                  normalUser:
                    description: normal user
                    value:
                      id: 1
                      username: johndoe
                      email: user1.gmail.com
                      first_name: John
                      last_name: Doe
                      created_date: 2023-10-01
                      modified_date: 2023-10-01
                      status: ACTIVE
                      role: USER
                      profile_picture: http://totally.not.placehold.er/
                  adminUser:
                    description: admin user
                    value:
                      id: 2
                      username: johndoe
                      email: user1.gmail.com
                      first_name: John
                      last_name: Doe
                      created_date: 2023-10-01
                      modified_date: 2023-10-01
                      status: ACTIVE
                      role: ADMIN
                      profile_picture: http://totally.not.placehold.er/
          '404':
            description: User not found
    put:
      tags:
        - users
      description: Update user by username or email
      requestBody:
        description: JSON data contain user required fields
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/User'
            example:
                id: 1
                username: johndoe
                email: user1.gmail.com
                first_name: John
                last_name: Doe
                created_date: 2023-10-01
                modified_date: 2023-10-01
                status: ACTIVE
                role: USER
                profile_picture: http://totally.not.placehold.er/

      responses:
        '204':
          description: User updated successfully
        '400':
          description: Request body was not valid
        '404':
          description: User was not found
        '409':
          description: A user with same name or email already exists
        '415':
          description: Wrong media type was used
    delete:
      tags:
        - users
      description: Delete user by username or email
      responses:
          '204':
            description: User deleted successfully
          '404':
            description: User not found
  /users/{user}/insights/:
    parameters:
      - $ref: '#/components/parameters/user'
    get:
      tags:
        - users
      description: Get all insights of a specific user
      responses:
        '200':
          description: Get list of user insights
          content:
            application/json:
              example:
                - id: 1
                  title: Insight 1
                  description: Description of insight 1
                  longitude: 12.345678
                  latitude: 34.567890
                  category: Category of insight 1
                  created_date: 2023-10-01
                - id: 2
                  title: Insight 2
                  description: Description of insight 2
                  longitude: 23.456789
                  latitude: 45.678901
                  category: Category of insight 2
                  created_date: 2023-10-01
        '500':
          description: Internal server error
    post:
        tags:
            - users
        description: Create a new insight
        requestBody:
            description: JSON data contain insight required fields
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Insight'
                example:
                  creator: 12345
                  title: Insight 1
                  description: K City Market
                  longitude: 12.345678
                  latitude: 34.567890
                  image: http://totally.not.placehold.er/
                  address: Oulu, Finland
                  category: Test category
                  subcategory: Test subcategory
                  external_link: http://totally.not.placehold.er/

        responses:
            '201':
              description: Insight created successfully
              headers:
                Location:
                  description: URI of newly created insight
                  schema:
                    type: string

            '415':
              description: Request content type must be JSON
            '400':
              description: Incomplete request
  /users/{user}/insights/{insight}/feedbacks/:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/insight'
    get:
      tags:
        - users
      description: Get all feedbacks of a specific insight
      responses:
        '200':
          description: Get list of insight feedbacks
          content:
            application/json:
              example:
                - id: 1
                  rating: 5
                  comment: Great insight
                  user: johndoe
                  insight: 1
                - id: 2
                  rating: 4
                  comment: Very informative
                  user: jane
                  insight: 1
        '500':
          description: Internal server error
    post:
      tags:
        - users
      description: User create a new feedback under a insight
      requestBody:
        description: JSON data contain feedback required fields
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
            example:
              user_id: 12345
              insight_id: 1
              rating: 5
              comment: Great insight

      responses:
        '201':
          description: Feedback created successfully
          headers:
            Location:
              description: URI of newly created feedback
              schema:
                type: string
        '415':
          description: Request content type must be JSON
        '400':
          description: Incomplete request

  /users/{user}/insights/{insight}/feedbacks/{feedback}:
    parameters:
      - $ref: '#/components/parameters/user'
      - $ref: '#/components/parameters/insight'
      - $ref: '#/components/parameters/feedback'
    get:
      tags:
        - users
      description: Get feedback by ID
      responses:
          '200':
            description: Get single feedback info successfully
            content:
              application/json:
                example:
                  id: 1
                  rating: 5
                  comment: Great insight
                  user: johndoe
                  insight: 1
          '404':
            description: Feedback not found

    put:
      tags:
        - users
      description: Update feedback by ID
      requestBody:
        description: JSON data contain feedback required fields
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
            example:
              rating: 5
              comment: Great insight

      responses:
        '204':
          description: Feedback updated successfully
        '400':
          description: Request body was not valid
        '404':
          description: Feedback was not found
        '415':
          description: Wrong media type was used

    delete:
      tags:
        - users
      description: Delete feedback by ID
      responses:
          '204':
            description: Feedback deleted successfully
          '404':
            description: Feedback not found
  /users/{user}/feedbacks/:
    parameters:
      - $ref: '#/components/parameters/user'
    get:
      tags:
        - users
      description: Get all feedbacks of a specific user
      responses:
        '200':
          description: Get user feedbacks successfully
          content:
            application/json:
              example:
                - id: 1
                  rating: 5
                  comment: Great insight
                  user: john
                  insight: 1
                - id: 2
                  rating: 4
                  comment: Very informative
                  user: jane
                  insight: 1
        '500':
          description: Internal server error
  /insights/:
    get:
      tags:
        - insights
      description: All insights
      responses:
        '200':
          description: Get list of insights
          content:
            application/json:
              example:
                - id: 1
                  title: Insight 1
                  description: Description of insight 1
                  longitude: 12.345678
                  latitude: 34.567890
                  category: Category of insight 1
                - id: 2
                  title: Insight 2
                  description: Description of insight 2
                  longitude: 23.456789
                  latitude: 45.678901
                  category: Category of insight 2
        '500':
          description: Internal server error
  /insights/{insight}:
    parameters:
      - $ref: '#/components/parameters/insight'
    get:
      tags:
        - insights
      description: Get insight detail by ID
      responses:
          '200':
            description: Get single insight info successfully
            content:
              application/json:
                example:
                  id: 1
                  title: K City Market
                  description: K City Market
                  longitude: 12.345678
                  latitude: 34.567890
                  image: http://totally.not.placehold.er/
                  created_date: 2023-10-01
                  modified_date: 2023-10-01
                  creator: 12345
                  address: Oulu, Finland
                  category: test category
                  subcategory: test subcategory
                  external_link: http://totally.not.placehold.er/

          '404':
            description: Insight not found

    put:
      tags:
        - insights
      description: Update insight by ID
      requestBody:
        description: JSON data contain insight required fields
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Insight'
            example:
              title: K City Market
              description: K City Market
              longitude: 12.345678
              latitude: 34.567890
              image: http://totally.not.placehold.er/
              address: Oulu, Finland
              category: Test category
              subcategory: Test subcategory
              external_link: http://totally.not.placehold.er/

      responses:
        '204':
          description: Insight updated successfully
        '400':
          description: Request body was not valid
        '404':
          description: Insight was not found
        '415':
          description: Wrong media type was used
    delete:
      tags:
        - insights
      description: Delete insight by ID
      responses:
          '204':
            description: Insight deleted successfully
          '404':
            description: Insight not found

info:
  title: Crowd Sourced Local Insights API
  version: 0.0.1
  description: API for the Crowd Sourced Local Insights project
  termsOfService: http://totally.not.placehold.er/
  contact:
    url: http://totally.not.placehold.er/
    email: webMasters@gmail.com
    name: Web Masters
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html


